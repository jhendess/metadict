
##############################################################################################################
#                                                                                                            #
# Main configuration file for metadict.                                                                      #
#                                                                                                            #
##############################################################################################################

#
# General server configuration
#
server:

   #
   # Context path where the main application is available
   #
   applicationContextPath: /

   #
   # Context path under which admin operations can be done
   #
   adminContextPath: /

   #
   # Default application port to listen on
   #
   applicationConnectors:
    - type: http
      port: 8080

   #
   # Default admin port to listen on
   #
   adminConnectors:
   - type: http
     port: 8081

#
# Configuration of the storage subsystem
#
storage:

  #
  # Set the name of the default storage backend to use.
  # In case you don't need any persistent storage, the "inmemory" backend can be used. Metadict will refuse to boot
  # when no storage is configured.
  #
  default: inmemory

  engines:

    #
    # Configuration for MapDB
    #
    mapdb:

      #
      # Set the operation mode for the backend. MapDB can either use a temporary storage or a file based storage.
      # Valid values:
      #  - "temporary"  -> Start MapDB with a temporary storage (i.e. inmemory). All stored data will be lost after shutdown.
      #  - "file"       -> Start MapDB with a file storage. All data will be permanently written to this file and are still
      #                    available after shutdown. Note, that you have to set the property mapdb.fileName accordingly!
      #
      mode: file

      #
      # Set the path of the file that will be used as data storage. The path can either be absolute or relative. Make sure,
      # that you have write access to the specified file or booting might fail. It is recommended to use a file name without
      # an extension to avoid problems.
      #
      filepath: /var/lib/metadict/mapdb_data

      #
      # Set "true" to enable memory mapped files. Memory mapped files may increase the performance significantly but might
      # lead to crashes when using a 32-bit JVM. You will encounter an OutOfMemoryError when using a 32-bit JVM and data
      # stores with more than 4gb.
      #
      enableMmapFile: true

      #
      # Set "true" to disable transactions. This makes writes faster, but might lose data if the store crashes.
      #
      disableTransactions: false

      #
      # Enables a mode where all modifications are queued and written into disk on Background Writer Thread.
      #
      enableAsyncWrite: true

#
# Logging configuration
#
logging:

  #
  # Default logging level for all messages
  #
  level: INFO

  #
  # Additional logger configuration
  #
  loggers:

    #
    # Log internal TRACE statements during development - disable in production
    #
    org.xlrnet.metadict: TRACE

  #
  # Configuration of additional log file appenders
  #
  appenders:

    #
    # Runtime logging to the console
    #
    - type: console

    #
    # File-based logging
    #
    - type: file

      #
      # The file to which current statements will be logged.
      #
      currentLogFilename: /var/lib/metadict/logs/metadict.log

      #
      # When the log file rotates, the archived log will be renamed to this and gzipped. The
      # %d is replaced with the previous day (yyyy-MM-dd). Custom rolling windows can be created
      # by passing a SimpleDateFormat-compatible format as an argument: "%d{yyyy-MM-dd-hh}".
      #
      archivedLogFilenamePattern: /var/lib/metadict/logs/example-%d.log.gz

      #
      # The number of archived files to keep.
      #
      archivedFileCount: 5

      #
      # The timezone used to format dates. HINT: USE THE DEFAULT, UTC.
      #
      timeZone: UTC
